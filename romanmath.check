#include "romanmath.h"

#test aTest
	ck_assert_int_eq( 1, 1 );

#test convertRoman
	ck_assert_int_eq( romanToInt("I"), 1);
	ck_assert_int_eq( romanToInt("II"), 2);
	ck_assert_int_eq( romanToInt("III"), 3);
	ck_assert_int_eq( romanToInt("IV"), 4);
	ck_assert_int_eq( romanToInt("V"), 5);
	ck_assert_int_eq( romanToInt("VI"), 6);
	ck_assert_int_eq( romanToInt("VII"), 7);
	ck_assert_int_eq( romanToInt("VIII"), 8);
	ck_assert_int_eq( romanToInt("IX"), 9);
	ck_assert_int_eq( romanToInt("X"), 10);
	ck_assert_int_eq( romanToInt("L"), 50);
	ck_assert_int_eq( romanToInt("C"), 100);
	ck_assert_int_eq( romanToInt("D"), 500);
	ck_assert_int_eq( romanToInt("M"), 1000);
	ck_assert_int_eq( romanToInt("MMDXVI"), 2516);

#test convertRomanInvalids
	ck_assert_int_eq( romanToInt("IIII"), 0);
	ck_assert_int_eq( romanToInt("VVV"), 0);
	ck_assert_int_eq( romanToInt("XXXX"), 0);
	ck_assert_int_eq( romanToInt("LLL"), 0);
	ck_assert_int_eq( romanToInt("CCCC"), 0);
	ck_assert_int_eq( romanToInt("DDD"), 0);
	ck_assert_int_eq( romanToInt("MMMMM"), 0);
	ck_assert_int_eq( romanToInt(""), 0);
	ck_assert_int_eq( romanToInt("W"), 0);
	ck_assert_int_eq( romanToInt("WII"), 0);


